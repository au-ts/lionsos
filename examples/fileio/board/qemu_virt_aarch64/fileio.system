<?xml version="1.0" encoding="UTF-8"?>
<system>
    <memory_region name="uart" size="0x1_000" phys_addr="0x9000000" />
    <memory_region name="virtio_regs" size="0x10_000" phys_addr="0xa003000" />

    <!-- eth driver/device ring buffer mechanism -->
    <memory_region name="hw_ring_buffer" size="0x10_000" />

    <!-- eth DMA and virtualised DMA regions -->
    <memory_region name="eth_rx_buffer_data_region" size="0x200_000" page_size="0x200_000" />
    <memory_region name="eth_tx_buffer_data_region_micropython" size="0x200_000" page_size="0x200_000" />
    <memory_region name="eth_rx_buffer_data_region_micropython" size="0x200_000" page_size="0x200_000" />

    <!-- shared memory for eth driver/eth virt queue mechanism -->
    <memory_region name="eth_rx_free_drv" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="eth_rx_active_drv" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="eth_tx_free_drv" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="eth_tx_active_drv" size="0x200_000" page_size="0x200_000"/>

    <!-- shared memory for eth virt_rx/eth copy queue mechanism -->
    <memory_region name="eth_rx_free_copy_micropython" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="eth_rx_active_copy_micropython" size="0x200_000" page_size="0x200_000"/>
    
    <!-- shared memory for eth copy/client queue mechanism -->
    <memory_region name="eth_rx_free_micropython" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="eth_rx_active_micropython" size="0x200_000" page_size="0x200_000"/>

    <!-- shared memory for client/virt_tx queue mechanism -->
    <memory_region name="eth_tx_free_micropython" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="eth_tx_active_micropython" size="0x200_000" page_size="0x200_000"/>

    <!-- serial data regions -->
    <memory_region name="serial_tx_data_driver" size="0x4_000" />
    <memory_region name="serial_tx_data_micropython" size="0x2_000" />
    <memory_region name="serial_rx_data_driver" size="0x2_000" />
    <memory_region name="serial_rx_data_micropython" size="0x2_000" />

    <!-- shared memory for serial driver/serial virt queue mechanism -->
    <memory_region name="serial_rx_queue_driver" size="0x1_000" />
    <memory_region name="serial_tx_queue_driver" size="0x1_000" />

    <!-- shared memory for serial virt/client queue mechanism -->
    <memory_region name="serial_tx_queue_micropython" size="0x1_000" />
    <memory_region name="serial_rx_queue_micropython" size="0x1_000" />

    <!-- shared memory for micropython/fs queue -->
    <memory_region name="shared_nfs_micropython" size="0x4000000" />
    <memory_region name="nfs_command_queue" size="0x8_000" />
    <memory_region name="nfs_completion_queue" size="0x8_000" />

    <!-- Fat file system memory region -->
    <memory_region name="coroutine_stack1" size="0x40_000" page_size="0x1000"/>
    <memory_region name="coroutine_stack2" size="0x40_000" page_size="0x1000"/>
    <memory_region name="coroutine_stack3" size="0x40_000" page_size="0x1000"/>
    <memory_region name="coroutine_stack4" size="0x40_000" page_size="0x1000"/>

    <protection_domain name="eth" priority="101" budget="100" period="400">
        <program_image path="eth_driver.elf" />
        <map mr="virtio_regs" vaddr="0x2_000_000" perms="rw" cached="false" setvar_vaddr="eth_regs"/>

        <map mr="hw_ring_buffer" vaddr="0x2_200_000" perms="rw" cached="false" setvar_vaddr="hw_ring_buffer_vaddr" />

        <map mr="eth_rx_free_drv" vaddr="0x2_400_000" perms="rw" cached="true" setvar_vaddr="rx_free" />
        <map mr="eth_rx_active_drv" vaddr="0x2_600_000" perms="rw" cached="true" setvar_vaddr="rx_active" />
        <map mr="eth_tx_free_drv" vaddr="0x2_800_000" perms="rw" cached="true" setvar_vaddr="tx_free" />
        <map mr="eth_tx_active_drv" vaddr="0x2_a00_000" perms="rw" cached="true" setvar_vaddr="tx_active" />

        <irq irq="78" id="0" trigger="edge" /> <!--> ethernet interrupt -->

        <setvar symbol="hw_ring_buffer_paddr" region_paddr="hw_ring_buffer" />
    </protection_domain>

    <protection_domain name="eth_virt_rx" priority="108" pp="true" budget="100" period="500" >
        <program_image path="network_virt_rx.elf" />
        <map mr="eth_rx_free_drv" vaddr="0x2_000_000" perms="rw" cached="true" setvar_vaddr="rx_free_drv" />
        <map mr="eth_rx_active_drv" vaddr="0x2_200_000" perms="rw" cached="true" setvar_vaddr="rx_active_drv" />

        <map mr="eth_rx_free_copy_micropython" vaddr="0x2_c00_000" perms="rw" cached="true" setvar_vaddr="rx_free_cli0" />
        <map mr="eth_rx_active_copy_micropython" vaddr="0x2_e00_000" perms="rw" cached="true" setvar_vaddr="rx_active_cli0" />

        <map mr="eth_rx_buffer_data_region" vaddr="0x3_000_000" perms="rw" cached="true" setvar_vaddr="buffer_data_vaddr" />
        <setvar symbol="buffer_data_paddr" region_paddr="eth_rx_buffer_data_region" />
    </protection_domain>

    <protection_domain name="eth_copy_mp" priority="97" budget="20000" >
        <program_image path="copy.elf" />
        <map mr="eth_rx_free_copy_micropython" vaddr="0x2_000_000" perms="rw" cached="true" setvar_vaddr="rx_free_virt" />
        <map mr="eth_rx_active_copy_micropython" vaddr="0x2_200_000" perms="rw" cached="true" setvar_vaddr="rx_active_virt" />

        <map mr="eth_rx_free_micropython" vaddr="0x2_400_000" perms="rw" cached="true" setvar_vaddr="rx_free_cli" />
        <map mr="eth_rx_active_micropython" vaddr="0x2_600_000" perms="rw" cached="true" setvar_vaddr="rx_active_cli" />

        <map mr="eth_rx_buffer_data_region" vaddr="0x2_800_000" perms="r" cached="true" setvar_vaddr="virt_buffer_data_region" />
        <map mr="eth_rx_buffer_data_region_micropython" vaddr="0x2_a00_000" perms="rw" cached="true" setvar_vaddr="cli_buffer_data_region" />
    </protection_domain>

    <protection_domain name="eth_virt_tx" priority="109" budget="100" period="500" >
        <program_image path="network_virt_tx.elf" />
        <map mr="eth_tx_free_drv" vaddr="0x2_000_000" perms="rw" cached="true" setvar_vaddr="tx_free_drv" />
        <map mr="eth_tx_active_drv" vaddr="0x2_200_000" perms="rw" cached="true" setvar_vaddr="tx_active_drv" />

        <map mr="eth_tx_free_micropython" vaddr="0x2_c00_000" perms="rw" cached="true" setvar_vaddr="tx_free_cli0" />
        <map mr="eth_tx_active_micropython" vaddr="0x2_e00_000" perms="rw" cached="true" setvar_vaddr="tx_active_cli0" />

        <map mr="eth_tx_buffer_data_region_micropython" vaddr="0x3_400_000" perms="rw" cached="true" setvar_vaddr="buffer_data_region_cli0_vaddr" />
        <setvar symbol="buffer_data_region_cli0_paddr" region_paddr="eth_tx_buffer_data_region_micropython" />
    </protection_domain>

    <protection_domain name="uart_driver" priority="100" >
        <program_image path="uart_driver.elf" />
        <map mr="uart" vaddr="0x5_000_000" perms="rw" cached="false" setvar_vaddr="uart_base" />

        <map mr="serial_rx_queue_driver" vaddr="0x4_000_000" perms="rw" cached="true" setvar_vaddr="rx_queue" />
        <map mr="serial_tx_queue_driver" vaddr="0x4_001_000" perms="rw" cached="true" setvar_vaddr="tx_queue" />

        <map mr="serial_rx_data_driver" vaddr="0x4_002_000" perms="rw" cached="true" setvar_vaddr="rx_data" />
        <map mr="serial_tx_data_driver" vaddr="0x4_004_000" perms="rw" cached="true" setvar_vaddr="tx_data" />

        <irq irq="33" id="0"/> <!-- IRQ for UART -->
    </protection_domain>
    
    <protection_domain name="timer_driver" priority="150" pp="true" passive="true">
        <program_image path="timer_driver.elf" />
        <irq irq="30" id="0"/> <!-- timer interrupt -->
    </protection_domain>

    <protection_domain name="serial_virt_tx" priority="99" >
        <program_image path="serial_virt_tx.elf" />
        <map mr="serial_tx_queue_driver" vaddr="0x4_000_000" perms="rw" cached="true" setvar_vaddr="tx_queue_drv" />
        <map mr="serial_tx_queue_micropython" vaddr="0x4_001_000" perms="rw" cached="true" setvar_vaddr="tx_queue_cli0" />

        <map mr="serial_tx_data_driver" vaddr="0x4_004_000" perms="rw" cached="true" setvar_vaddr="tx_data_drv" />
        <map mr="serial_tx_data_micropython" vaddr="0x4_008_000" perms="r" cached="true" setvar_vaddr="tx_data_cli0" />
    </protection_domain>

    <protection_domain name="serial_virt_rx" priority="98" >
        <program_image path="serial_virt_rx.elf" />
        <map mr="serial_rx_queue_driver" vaddr="0x4_000_000" perms="rw" cached="true" setvar_vaddr="rx_queue_drv" />
        <map mr="serial_rx_queue_micropython" vaddr="0x4_001_000" perms="rw" cached="true" setvar_vaddr="rx_queue_cli0" />

        <map mr="serial_rx_data_driver" vaddr="0x4_004_000" perms="r" cached="true" setvar_vaddr="rx_data_drv" />
        <map mr="serial_rx_data_micropython" vaddr="0x4_006_000" perms="rw" cached="true" setvar_vaddr="rx_data_cli0" />
    </protection_domain>

    <protection_domain name="micropython" priority="1">
        <program_image path="micropython.elf" />
        <map mr="nfs_command_queue" vaddr="0x7_800_000" perms="rw" cached="true" setvar_vaddr="nfs_command_queue" />
        <map mr="nfs_completion_queue" vaddr="0x7_810_000" perms="rw" cached="true" setvar_vaddr="nfs_completion_queue" />
        <map mr="shared_nfs_micropython" vaddr="0x7_900_000" perms="rw" cached="true" setvar_vaddr="nfs_share" />

        <map mr="eth_rx_free_micropython" vaddr="0x4_000_000" perms="rw" cached="true" setvar_vaddr="rx_free" />
        <map mr="eth_rx_active_micropython" vaddr="0x4_200_000" perms="rw" cached="true" setvar_vaddr="rx_active" />
        <map mr="eth_tx_free_micropython" vaddr="0x3_400_000" perms="rw" cached="true" setvar_vaddr="tx_free" />
        <map mr="eth_tx_active_micropython" vaddr="0x3_600_000" perms="rw" cached="true" setvar_vaddr="tx_active" />

        <map mr="eth_rx_buffer_data_region_micropython" vaddr="0x2_200_000" perms="rw" cached="true" setvar_vaddr="rx_buffer_data_region" />
        <map mr="eth_tx_buffer_data_region_micropython" vaddr="0x2_000_000" perms="rw" cached="true" setvar_vaddr="tx_buffer_data_region" />

        <map mr="serial_tx_queue_micropython" vaddr="0x60_000_000" perms="rw" cached="true" setvar_vaddr="serial_tx_queue" />
        <map mr="serial_rx_queue_micropython" vaddr="0x60_001_000" perms="rw" cached="true" setvar_vaddr="serial_rx_queue" />
        <map mr="serial_tx_data_micropython" vaddr="0x60_002_000" perms="rw" cached="true" setvar_vaddr="serial_tx_data" />
        <map mr="serial_rx_data_micropython" vaddr="0x60_004_000" perms="rw" cached="true" setvar_vaddr="serial_rx_data" />
    </protection_domain>

    <!-- <memory_region name="blk_regs" size="0x10_000" phys_addr="0xa003000" /> -->
    <!-- Needed specifically for the virtIO block driver -->
    <!-- TODO: make this one region -->
    <memory_region name="blk_virtio_headers" size="0x2000" />
    <memory_region name="blk_driver_metadata" size="0x200000" />

    <memory_region name="blk_driver_config" size="0x1000" page_size="0x1000" />
    <memory_region name="blk_driver_request" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="blk_driver_response" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="blk_driver_data" size="0x200_000" page_size="0x200_000" />

    <memory_region name="blk_client_config" size="0x1000" page_size="0x1000" />
    <memory_region name="blk_client_request" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="blk_client_response" size="0x200_000" page_size="0x200_000"/>
    <memory_region name="blk_client_data" size="0x200_000" page_size="0x200_000" />

    <protection_domain name="BLK_DRIVER" priority="254">
        <program_image path="blk_driver.elf" />
        <map mr="virtio_regs" vaddr="0x2_000_000" perms="rw" cached="false" setvar_vaddr="blk_regs"/>
        <setvar symbol="virtio_headers_paddr" region_paddr="blk_virtio_headers" />
        <setvar symbol="requests_paddr" region_paddr="blk_driver_metadata" />

        <map mr="blk_driver_config" vaddr="0x40_000_000" perms="rw" cached="true" setvar_vaddr="blk_config" />
        <map mr="blk_driver_request" vaddr="0x40_200_000" perms="rw" cached="true" setvar_vaddr="blk_request" />
        <map mr="blk_driver_response" vaddr="0x40_400_000" perms="rw" cached="true" setvar_vaddr="blk_response" />

        <map mr="blk_virtio_headers" vaddr="0x50_000_000" perms="rw" cached="false" setvar_vaddr="virtio_headers_vaddr" />
        <map mr="blk_driver_metadata" vaddr="0x60_000_000" perms="rw" cached="false" setvar_vaddr="requests_vaddr" />

        <irq irq="79" id="0" trigger="edge" />
    </protection_domain>

    <protection_domain name="BLK_VIRT" priority="101">
        <program_image path="blk_virt.elf" />

        <map mr="blk_driver_config" vaddr="0x40000000" perms="rw" cached="false" setvar_vaddr="blk_config_driver"     />
        <map mr="blk_driver_request" vaddr="0x40200000" perms="rw" cached="false" setvar_vaddr="blk_req_queue_driver"  />
        <map mr="blk_driver_response" vaddr="0x40400000" perms="rw" cached="false" setvar_vaddr="blk_resp_queue_driver" />
        <map mr="blk_driver_data" vaddr="0x40600000" perms="rw" cached="false" setvar_vaddr="blk_data_driver" />
        <setvar symbol="blk_data_driver_paddr" region_paddr="blk_driver_data" />

        <map mr="blk_client_config" vaddr="0x30000000" perms="rw" cached="false" setvar_vaddr="blk_config"     />
        <map mr="blk_client_request" vaddr="0x30200000" perms="rw" cached="false" setvar_vaddr="blk_req_queue"  />
        <map mr="blk_client_response" vaddr="0x30400000" perms="rw" cached="false" setvar_vaddr="blk_resp_queue" />
        <map mr="blk_client_data" vaddr="0x30600000" perms="rw" cached="false" setvar_vaddr="blk_client_data_start" />
    </protection_domain>

    <!-- FAT File system -->
    <protection_domain name="fatfs" priority="100" pp="true">
        <program_image path="fatfs.elf" />
        <map mr="blk_client_config" vaddr="0x40_000_000" perms="r" cached="true" setvar_vaddr="config" />

        <map mr="blk_client_request" vaddr="0x40_200_000" perms="rw" cached="true" setvar_vaddr="request" />
        <map mr="blk_client_response" vaddr="0x40_400_000" perms="rw" cached="true" setvar_vaddr="response" />
        <map mr="blk_client_data" vaddr="0x40_800_000" perms="rw" cached="true" setvar_vaddr="fs_metadata" />

        <map mr="nfs_command_queue" vaddr="0x7_800_000" perms="rw" cached="true" setvar_vaddr="fatfs_command_queue" />
        <map mr="nfs_completion_queue" vaddr="0x7_810_000" perms="rw" cached="true" setvar_vaddr="fatfs_completion_queue" />
        <map mr="shared_nfs_micropython" vaddr="0x7_900_000" perms="rw" cached="true" setvar_vaddr="client_data_offset"/>

        <map mr="coroutine_stack1" vaddr="0x32000000" perms="rw" cached="true" setvar_vaddr="coroutine_stack_one" />
        <map mr="coroutine_stack2" vaddr="0x32050000" perms="rw" cached="true" setvar_vaddr="coroutine_stack_two" />
        <map mr="coroutine_stack3" vaddr="0x32100000" perms="rw" cached="true" setvar_vaddr="coroutine_stack_three" />
        <map mr="coroutine_stack4" vaddr="0x32150000" perms="rw" cached="true" setvar_vaddr="coroutine_stack_four" />
    </protection_domain>

    <channel>
        <end pd="eth" id="2" />
        <end pd="eth_virt_rx" id="0" />
    </channel>

    <channel>
        <end pd="eth" id="1" />
        <end pd="eth_virt_tx" id="0" />
    </channel>

    <channel>
        <end pd="eth_virt_rx" id="1" />
        <end pd="eth_copy_mp" id="0" />
    </channel>

    <channel>
        <end pd="eth_virt_tx" id="1" />
        <end pd="micropython" id="3" />
    </channel>

    <channel>
        <end pd="eth_copy_mp" id="1" />
        <end pd="micropython" id="2" />
    </channel>

    <channel>
        <end pd="uart_driver" id="1"/>
        <end pd="serial_virt_tx" id="0"/>
    </channel>

    <channel>
        <end pd="uart_driver" id="2"/>
        <end pd="serial_virt_rx" id="0"/>
    </channel>

    <channel>
        <end pd="serial_virt_rx" id="1"/>
        <end pd="micropython" id="8"/>
    </channel>

    <channel>
        <end pd="serial_virt_tx" id="1"/>
        <end pd="micropython" id="9"/>
    </channel>

    <channel>
        <end pd="timer_driver" id="1" />
        <end pd="micropython" id="1" />
    </channel>
    
    <channel>
        <end pd="micropython" id="7"/>
        <end pd="fatfs" id="1"/>
    </channel>

    <channel>
        <end pd="fatfs" id="2"/>
        <end pd="BLK_VIRT" id="1"/>
    </channel>

    <channel>
        <end pd="BLK_VIRT" id="0"/>
        <end pd="BLK_DRIVER" id="1"/>
    </channel>
</system>